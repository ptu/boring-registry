name: Minio

on:
  push:
    branches: [ main, minio-tests ]
  pull_request:
    branches: [ main ]

jobs:
  minio:
    name: minio
    runs-on: ubuntu-latest
    env:
      MINIO_ACCESS_KEY: citest
      MINIO_SECRET_KEY: citest_secret_key
      MINIO_ADMIN_ACCESS_KEY: minioadmin
      MINIO_ADMIN_SECRET_KEY: minioadmin
      BUCKET_NAME: testbucket
    # services:
    #   minio:
    #     image: minio/minio
    #     ports:
    #       - 9000:9000
    #     env:
    #       MINIO_ACCESS_KEY: citest
    #       MINIO_SECRET_KEY: citest
    #     volumes:
    #       - ${{ github.workspace }}/data:/data
    #     options: --name=minio --health-cmd "curl http://localhost:9000/minio/health/ready"
    
    steps:
      - name: Setup minio
        run: |
          docker run -d -p 9000:9000 --name minio \
                     -e "MINIO_ACCESS_KEY=${{ env.MINIO_ADMIN_ACCESS_KEY }}" \
                     -e "MINIO_SECRET_KEY=${{ env.MINIO_ADMIN_SECRET_KEY }}" \
                     -v ${{ github.workspace }}/data:/data \
                     -v ${{ github.workspace }}/config:/root/.minio \
                     minio/minio server /data

      #    export AWS_ACCESS_KEY_ID=${{ env.MINIO_ADMIN_ACCESS_KEY }}
      #    export AWS_SECRET_ACCESS_KEY=${{ env.MINIO_ADMIN_SECRET_KEY }}
      #    export AWS_EC2_METADATA_DISABLED=true

      #    aws --endpoint-url http://127.0.0.1:9000/ s3 mb s3://testbucket

      # - name: Install minio python module
      #   run: pip3 install minio
      # - name: Setup minio bucket
      #   run: |
      #     python3 - <<'EOF'
      #     from minio import Minio
      #     from minio.error import InvalidResponseError

      #     try:
      #         minio = Minio(
      #             'localhost:9000',
      #             access_key="${{ env.MINIO_ADMIN_ACCESS_KEY }}",
      #             secret_key="${{ env.MINIO_ADMIN_SECRET_KEY }}",
      #             secure=False
      #         )
      #     except Exception as ex:
      #         raise
          
      #     minio.make_bucket("${{ env.BUCKET_NAME }}")
      #     print(f'{minio.list_buckets()}')
      #     EOF
      - name: Setup Minio
        run: |
          wget -o /usr/local/bin/mc https://dl.min.io/client/mc/release/linux-amd64/mc
          chmod +x /usr/local/bin/mc
          file /usr/local/bin/mc
          /usr/local/bin/mc alias set ghactions http://localhost:9000 ${{ env.MINIO_ADMIN_ACCESS_KEY }} ${{ env.MINIO_ADMIN_SECRET_KEY }}
          /usr/local/bin/mc mb -p ghactions/${{ env.BUCKET_NAME }}
          /usr/local/bin/mc admin user add ghactions ${{ env.MINIO_ACCESS_KEY }} ${{ env.MINIO_SECRET_KEY }}
          cat > /tmp/policy.json << 'EOF'
          {
              "Version": "2012-10-17",
              "Statement": [
                  {
                      "Effect": "Allow",
                      "Action": [
                          "s3:*"
                      ],
                      "Resource": [
                          "arn:aws:s3:::${{ env.BUCKET_NAME }}/*",
                          "arn:aws:s3:::${{ env.BUCKET_NAME }}"
                      ]
                  }
              ]
          }
          EOF
          /usr/local/bin/mc admin policy add ghactions cipolicy /tmp/policy.json
          /usr/local/bin/mc admin policy set ghactions cipolicy user=${{ env.MINIO_ACCESS_KEY }}
          /usr/local/bin/mc admin user info ghactions ${{ env.MINIO_ACCESS_KEY }}